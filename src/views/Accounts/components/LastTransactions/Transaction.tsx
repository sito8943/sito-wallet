import { useMemo } from "react";
import { useTranslation } from "react-i18next";

// hooks
import { useTimeAge } from "hooks";

// lib
import { TransactionType } from "lib";

// components
import { Currency } from "../../../Currencies";
import { Autogenerated, Type } from "../../../TransactionCategories";

// types
import { TransactionPropsType } from "./types";

export const Transaction = (props: TransactionPropsType) => {
  const { t } = useTranslation();

  const { description, initial, date, amount, category, currency } = props;

  const { timeAge } = useTimeAge();

  const parsedDescription = useMemo(() => {
    if (!description?.length) return t("_entities:base.description.empty");
    if (initial) return t("_entities:transactionCategory.description.init");
    return description;
  }, [description, initial, t]);

  const isIn = useMemo(() => category?.type === TransactionType.In, [category]);

  return (
    <li className={"flex items-center gap-2 w-full"}>
      <Type
        className={`text-xl`}
        noText
        filled={false}
        type={category?.type ?? TransactionType.In}
      />
      <div className="flex flex-col items-start justify-start w-full">
        <div className="flex items-center gap-1">
          {category?.initial ? (
            <Autogenerated isTitle={false} />
          ) : (
            <p>{category?.name}</p>
          )}
          <p>- {timeAge(new Date(date))}</p>
        </div>
        <p className="!text-xs">{parsedDescription}</p>
      </div>
      <p className="flex items-center gap-1 text-lg">
        {isIn ? "+" : "-"}
        {amount}
        <Currency {...currency} />
      </p>
    </li>
  );
};
